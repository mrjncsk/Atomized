name: Build Netinstall ISOs

on:
  schedule:
    - cron: "3 2 1 * *"
  workflow_dispatch:

jobs:
  build_and_upload:
    runs-on: ubuntu-24.04
    permissions:
      contents: read

    strategy:
      fail-fast: false
      matrix:
        variant:
          - name: atomized
            bootc_image: ghcr.io/mrjncsk/atomized:latest
          - name: atomized-nvidia
            bootc_image: ghcr.io/mrjncsk/atomized-nvidia:latest

    env:
      BASE_VERSION: "v0.1"

    steps:
      - name: Set RELEASE_TAG
        id: set_release_tag
        run: |
          echo "RELEASE_TAG=${BASE_VERSION}.${{ github.run_number }}" >> $GITHUB_ENV
          echo "Release-Tag ist ${{ env.RELEASE_TAG }}"

      - name: Checkout source
        uses: actions/checkout@v4

      - name: Build ISO ${{ matrix.variant.name }}
        uses: osbuild/bootc-image-builder-action@main
        with:
          builder-image: ghcr.io/lorbuschris/bootc-image-builder:20250608
          config-file: ./disk/iso.toml
          image: quay.io/fedora/fedora-bootc:latest
          types: anaconda-iso
        env:
          BOOTC_IMAGE: ${{ matrix.variant.bootc_image }}

      - name: Prepare output folder
        run: mkdir -p ./output

      - name: Fix ownership of output files
        run: sudo chown -R $USER:$USER ./output

      - name: Rename ISO for ${{ matrix.variant.name }}
        run: |
          mv ./output/bootiso/install.iso ./output/${{ matrix.variant.name }}-netinstall-${{ env.RELEASE_TAG }}.iso

      - name: Create SHA256 checksum
        run: |
          sha256sum ./output/${{ matrix.variant.name }}-netinstall-${{ env.RELEASE_TAG }}.iso > ./output/${{ matrix.variant.name }}-netinstall-${{ env.RELEASE_TAG }}.iso.sha256

      - name: Install Internet Archive CLI
        run: pip install internetarchive

      - name: Configure Internet Archive CLI with S3 credentials
        run: |
          mkdir -p ~/.config
          echo "[s3]" > ~/.config/ia.ini
          echo "access = $ARCHIVE_ACCESS_KEY" >> ~/.config/ia.ini
          echo "secret = $ARCHIVE_SECRET_KEY" >> ~/.config/ia.ini
        env:
          ARCHIVE_ACCESS_KEY: ${{ secrets.ARCHIVE_ACCESS_KEY }}
          ARCHIVE_SECRET_KEY: ${{ secrets.ARCHIVE_SECRET_KEY }}

      - name: Upload ISO and logo to archive.org
        run: |
          ARCHIVE_ID="${{ matrix.variant.name }}-netinstall-${{ env.RELEASE_TAG }}"
          TITLE="${{ matrix.variant.name }} Netinstall ISO ${{ env.RELEASE_TAG }}"
          DESCRIPTION="Minimal Netinstall ISO for ${{ matrix.variant.name }}. Includes Bootc image ${{ matrix.variant.bootc_image }}."

          ia upload "${ARCHIVE_ID}" \
            ./output/${{ matrix.variant.name }}-netinstall-${{ env.RELEASE_TAG }}.iso \
            ./output/${{ matrix.variant.name }}-netinstall-${{ env.RELEASE_TAG }}.iso.sha256 \
            ./Logo.png \
            --metadata="title:${TITLE}" \
            --metadata="mediatype:software" \
            --metadata="collection:my-collection" \
            --metadata="description:${DESCRIPTION}"

      - name: Print archive.org URL
        run: |
          echo "ISO und Checksumme hochgeladen nach https://archive.org/details/${{ matrix.variant.name }}-netinstall-${{ env.RELEASE_TAG }}"
