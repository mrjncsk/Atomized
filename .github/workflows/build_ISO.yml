name: ISO Workflow

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - "./disk/iso.toml"
      - "./.github/workflows/build_iso.yml"
  push:
    tags:
      - "v*" # Tag-basiert fÃ¼r Releases

env:
  IMAGE_REGISTRY: "ghcr.io/${{ github.repository_owner }}"
  IMAGE_TAG: "latest"
  BIB_IMAGE: "ghcr.io/lorbuschris/bootc-image-builder:20250608"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-iso:
    name: Build ISO Image
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        base_tag: [atomized, atomized-nvidia]
    env:
      IMAGE_NAME: ${{ github.event.repository.name }}${{ matrix.base_tag == 'atomized-nvidia' && '-nvidia' || '' }}

    permissions:
      contents: read
      packages: read
      id-token: write

    steps:
      - name: Prepare environment
        run: |
          echo "DISK_TYPE=anaconda-iso" >> $GITHUB_ENV
          echo "IMAGE_REGISTRY=${{ env.IMAGE_REGISTRY }}" >> $GITHUB_ENV
          echo "IMAGE_NAME=${{ env.IMAGE_NAME }}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ env.IMAGE_TAG }}" >> $GITHUB_ENV
          echo "USER_UID=$(id -u)" >> $GITHUB_ENV
          echo "USER_GID=$(id -g)" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build ISO
        id: build
        uses: osbuild/bootc-image-builder-action@main
        with:
          builder-image: ${{ env.BIB_IMAGE }}
          config-file: ./disk/iso.toml
          image: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          types: anaconda-iso
          additional-args: --use-librepo=True --rootfs=ext4

      - name: Upload ISO and Checksum to Job Artifacts
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: iso-${{ matrix.base_tag }}
          path: ${{ steps.build.outputs.output-directory }}
          if-no-files-found: error
          retention-days: 7
          compression-level: 0
          overwrite: true

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-iso
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'push' || startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download atomized artifact
        uses: actions/download-artifact@v3
        with:
          name: iso-atomized
          path: ./artifacts/atomized

      - name: Download atomized-nvidia artifact
        uses: actions/download-artifact@v3
        with:
          name: iso-atomized-nvidia
          path: ./artifacts/atomized-nvidia

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            artifacts/atomized/*.iso
            artifacts/atomized/*.sha256
            artifacts/atomized-nvidia/*.iso
            artifacts/atomized-nvidia/*.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
